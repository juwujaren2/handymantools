@model HandymanTools.Models.ToolCreateViewModel
@{ ViewBag.Title = "Add new tool"; }

<div class="jumbotron handyman-jumbotron">
    <h2><span class="glyphicon glyphicon-wrench" aria-hidden="true"></span> @ViewBag.Title</h2>
</div>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <br />

    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.AbbreviatedDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AbbreviatedDescription, new { htmlAttributes = new { @class = "form-control tool-control" } })
                @Html.ValidationMessageFor(model => model.AbbreviatedDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PurchasePrice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10 input-group">
                <div class="input-group-addon" id="purchase-price">$</div>
                @Html.EditorFor(model => model.PurchasePrice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PurchasePrice, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RentalPrice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10 input-group">
                <div class="input-group-addon" id="rental-price">$</div>
                @Html.EditorFor(model => model.RentalPrice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RentalPrice, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.DepositAmount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10 input-group">
                <div class="input-group-addon" id="deposit-amount">$</div>
                @Html.EditorFor(model => model.DepositAmount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DepositAmount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FullDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FullDescription, new { htmlAttributes = new { @class = "form-control tool-control", @rows = 4 } })
                @Html.ValidationMessageFor(model => model.FullDescription, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ToolType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.ToolType, new { @class = "form-control" })
            </div>
        </div>
        <div id="AccessoriesGroup" class="form-group hidden">
            @Html.LabelFor(model => model.Accessories, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div id="AccessoriesList">
                    @for (int i = 0; i < Model.Accessories.Count; i++)
                    {
                        <div class="input-group wiseacre accessory-container" id="AccessoryContainer_@i">
                            <input type="text" name="Accessories[@i]" class="form-control accessory-control" id="Accessory_@i" placeholder="Enter Accessory" value="@Model.Accessories[i]">
                            <div class="input-group-btn" style="width: auto;">
                                <button id="btn_DeleteAccessory_@i" type="button" class="btn btn-danger" aria-label="Add">
                                    <span class="glyphicon glyphicon-trash" aria-hidden="true"></span>
                                </button>
                            </div>
                        </div>
                    }
                </div>
                <div class="input-group">
                    <input type="text" class="form-control accessory-control" id="input_AddAccessory" placeholder="Enter Accessory">
                    <div class="input-group-btn" style="width: auto;">
                        <button id="btn_AddAccessory" type="button" class="btn btn-primary" aria-label="Add">
                            <span class="glyphicon glyphicon-plus" aria-hidden="true"></span>
                        </button>
                    </div>
                </div>
                @Html.ValidationMessageFor(model => model.Accessories, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">                
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </div>
    </div>
}
<hr />
<div>
    @Html.ActionLink("Return to Main", "Pickup", "Reservation")    
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        var counter = $('#AccessoriesList').children().length;
        $('#btn_AddAccessory').on('click', function () {
            var $accessoryInput = $('#input_AddAccessory');
            var accessory = $accessoryInput.val();
            if (accessory.length > 0) {
                $('#AccessoriesList').append('<div class="input-group accessory-container" id="AccessoryContainer' + counter + '">'
                    + '<input type="text" name="Accessories[' + counter + ']" class="form-control accessory-control" id="Accessory' + counter + '" placeholder="Enter Accessory" value="' + accessory +'">'
                    + '<div class="input-group-btn" style="width: auto;">'
                    + '<button id="btn_DeleteAccessory' + counter + '" type="button" class="btn btn-danger" aria-label="Add"><span class="glyphicon glyphicon-trash" aria-hidden="true"></span>'
                    + '</button></div></div>');
                counter++;
                $accessoryInput.val('');
            }
        });
        $('#AccessoriesList').on('click', '[id^="btn_DeleteAccessory"]', function () {
            var $container = $(this).closest('[id^="AccessoryContainer"]');
            if ($container.length > 0) {
                $container.find('input[id^="Accessory"]').val('');
                $container.hide();
            }
        });

        $(function () {
            if ($("select[name=ToolType] option:selected").text() == 'Power') {
                $('#AccessoriesGroup').removeClass('hidden');
            }
            $('#ToolType').change(function () {
                if ( $("select option:selected").text() == 'Power') {
                    $('#AccessoriesGroup').removeClass('hidden');
                }
                else {
                    $('#AccessoriesGroup').addClass('hidden');
                }
            });
        });
    </script>
}


